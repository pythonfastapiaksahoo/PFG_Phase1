import sys
import traceback
import datetime
# import model
# from session import SQLALCHEMY_DATABASE_URL, DB, engine
# from session import DB,SCHEMA


sys.path.append("..")
import model
from session import DB,SCHEMA
from session import SQLALCHEMY_DATABASE_URL, DB, engine
from logger_module import logger



# db = SCHEMA
def voucher_data_insert(inv_id,invoice_type,db):
# inv_id = 418
    stmp_dt = db.query(model.StampDataValidation).filter(model.StampDataValidation.documentid == inv_id).all()
    stmp_dt_dict = {}
    for dtm_rw in stmp_dt:
        stmp_dt_dict[dtm_rw.stamptagname] = dtm_rw.stampvalue
    confNumber = stmp_dt_dict['ConfirmationNumber']
    invo_recp = db.query(model.PFGReceipt).filter(model.PFGReceipt.RECEIVER_ID == confNumber).all()

    for invRpt in invo_recp:
        BUSINESS_UNIT = invRpt.BUSINESS_UNIT
        VENDOR_SETID = invRpt.VENDOR_SETID
        VENDOR_ID = invRpt.VENDOR_ID
        MERCHANDISE_AMT = invRpt.MERCHANDISE_AMT
        ACCOUNT = invRpt.ACCOUNT
        DEPTID = invRpt.DEPTID
        LOCATION = invRpt.LOCATION


    modelid = db.query(model.Document.documentModelID).filter(model.Document.idDocument == inv_id).scalar()
    docPath = db.query(model.Document.docPath).filter(model.Document.idDocument == inv_id).scalar()
    invo_total_Tg= db.query(model.DocumentTagDef.idDocumentTagDef).filter(model.DocumentTagDef.TagLabel == "InvoiceTotal", model.DocumentTagDef.idDocumentModel == modelid).scalar()
    invo_Date_Tg= db.query(model.DocumentTagDef.idDocumentTagDef).filter(model.DocumentTagDef.TagLabel == "InvoiceDate", model.DocumentTagDef.idDocumentModel == modelid).scalar()
    invo_ID_Tg= db.query(model.DocumentTagDef.idDocumentTagDef).filter(model.DocumentTagDef.TagLabel == "InvoiceId", model.DocumentTagDef.idDocumentModel == modelid).scalar()
    invo_SubTotal_Tg= db.query(model.DocumentTagDef.idDocumentTagDef).filter(model.DocumentTagDef.TagLabel == "SubTotal", model.DocumentTagDef.idDocumentModel == modelid).scalar()

    TaxTag = db.query(model.DocumentTagDef.idDocumentTagDef).filter(model.DocumentTagDef.TagLabel == "TotalTax", model.DocumentTagDef.idDocumentModel == modelid).scalar()
    TotalTag = db.query(model.DocumentTagDef.idDocumentTagDef).filter(model.DocumentTagDef.TagLabel == "InvoiceTotal", model.DocumentTagDef.idDocumentModel == modelid).scalar()
    Invo_header = db.query(model.DocumentData).filter(model.DocumentData.documentID == inv_id, model.DocumentData.documentTagDefID.in_([invo_total_Tg,invo_Date_Tg,invo_ID_Tg,invo_SubTotal_Tg])).all()

    invo_hrd_data = {}
    for i in Invo_header:
        invo_hrd_data[i.documentTagDefID] = i.Value
    invo_total = invo_hrd_data[invo_total_Tg]
    invo_SubTotal = invo_hrd_data[invo_SubTotal_Tg]
    invo_Date = invo_hrd_data[invo_Date_Tg]
    invo_ID = invo_hrd_data[invo_ID_Tg]

    VoucherData_insert_data = {'documentID':inv_id,'Business_unit':BUSINESS_UNIT,'Invoice_Id':invo_ID,'Invoice_Dt':invo_Date,'Vendor_Setid':VENDOR_SETID,'Vendor_ID':VENDOR_ID,'Deptid':DEPTID,'Account':ACCOUNT,'Gross_Amt':invo_SubTotal,'Merchandise_Amt':invo_total,'File_Name':docPath.split('/')[-1],'Distrib_Line_num':1,'Voucher_Line_num':1,'Image_Nbr':1,'Origin':invoice_type}
    VD_db_data = model.VoucherData(**VoucherData_insert_data)
    db.add(VD_db_data)
    db.commit()
